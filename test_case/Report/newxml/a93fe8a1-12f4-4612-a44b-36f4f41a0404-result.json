{"name": "test_del_store_sucess[testdata3]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=124.0.6367.202)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6003F1522+60802]\n\t(No symbol) [0x00007FF60036AC22]\n\t(No symbol) [0x00007FF600227CE4]\n\t(No symbol) [0x00007FF6001FDFDF]\n\t(No symbol) [0x00007FF6002A1E57]\n\t(No symbol) [0x00007FF6002B98D1]\n\t(No symbol) [0x00007FF60029A923]\n\t(No symbol) [0x00007FF600268FEC]\n\t(No symbol) [0x00007FF600269C21]\n\tGetHandleVerifier [0x00007FF6006F413D+3217821]\n\tGetHandleVerifier [0x00007FF6007360D7+3488055]\n\tGetHandleVerifier [0x00007FF60072F05F+3459263]\n\tGetHandleVerifier [0x00007FF6004AB866+823494]\n\t(No symbol) [0x00007FF600375FBF]\n\t(No symbol) [0x00007FF600370EE4]\n\t(No symbol) [0x00007FF600371072]\n\t(No symbol) [0x00007FF6003618C4]\n\tBaseThreadInitThunk [0x00007FF94C1B7344+20]\n\tRtlUserThreadStart [0x00007FF94D8E26B1+33]", "trace": "self = <test_case.store.test_store.TestStore object at 0x000002CC41E93190>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"705a312be3d4f0f7f92b66831a03641b\")>\ntestdata = {'删除的门店名称': 'web2'}\n\n    @allure.story(\"删除门店成功\")\n    @pytest.mark.run(order=9)\n    #@pytest.mark.skip\n    @pytest.mark.parametrize(\"testdata\", read_excel.load_testdata('../../data/data_store.xlsx', '删除门店成功'))\n    def test_del_store_sucess(self,driver,testdata):\n        page=PageStore(driver)\n>       page.del_store(testdata['删除的门店名称'])\n\ntest_store.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\page_object\\page_store.py:100: in del_store\n    self.mouse.move_element(element_store.btn_store_del)\n..\\..\\bage\\mouse.py:18: in move_element\n    ActionChains(self.driver).scroll_to_element(self.base.find_element(loc)).perform()\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py:94: in perform\n    self.w3c_actions.perform()\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002CC41F4BB90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF6003618C4]\\\\n\\\\tBaseThreadInitThunk [0x00007FF94C1B7344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF94D8E26B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=124.0.6367.202)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6003F1522+60802]\nE       \t(No symbol) [0x00007FF60036AC22]\nE       \t(No symbol) [0x00007FF600227CE4]\nE       \t(No symbol) [0x00007FF6001FDFDF]\nE       \t(No symbol) [0x00007FF6002A1E57]\nE       \t(No symbol) [0x00007FF6002B98D1]\nE       \t(No symbol) [0x00007FF60029A923]\nE       \t(No symbol) [0x00007FF600268FEC]\nE       \t(No symbol) [0x00007FF600269C21]\nE       \tGetHandleVerifier [0x00007FF6006F413D+3217821]\nE       \tGetHandleVerifier [0x00007FF6007360D7+3488055]\nE       \tGetHandleVerifier [0x00007FF60072F05F+3459263]\nE       \tGetHandleVerifier [0x00007FF6004AB866+823494]\nE       \t(No symbol) [0x00007FF600375FBF]\nE       \t(No symbol) [0x00007FF600370EE4]\nE       \t(No symbol) [0x00007FF600371072]\nE       \t(No symbol) [0x00007FF6003618C4]\nE       \tBaseThreadInitThunk [0x00007FF94C1B7344+20]\nE       \tRtlUserThreadStart [0x00007FF94D8E26B1+33]\n\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException"}, "parameters": [{"name": "testdata", "value": "{'删除的门店名称': 'web2'}"}], "start": 1716440716017, "stop": 1716440716020, "uuid": "039acdf5-0c26-44f8-9405-6e3d4de05835", "historyId": "b815eee23bc7f1257f4e4846964671d8", "testCaseId": "bfe563a65eca528e8af236a6596325ee", "fullName": "test_store.TestStore#test_del_store_sucess", "labels": [{"name": "story", "value": "删除门店成功"}, {"name": "feature", "value": "门店"}, {"name": "tag", "value": "run(order=9)"}, {"name": "suite", "value": "test_store"}, {"name": "subSuite", "value": "TestStore"}, {"name": "host", "value": "DESKTOP-69U8RKT"}, {"name": "thread", "value": "7752-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_store"}]}